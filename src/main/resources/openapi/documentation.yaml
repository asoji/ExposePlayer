openapi: "3.1.0"
info:
  title: "ExposePlayers API"
  description: "ExposePlayers API"
  version: "1.0.0"
servers:
- url: "https://ExposePlayers"
paths:
  /:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Howdy! If you somehow got here, that's because Exposer is\
                    \ installed and is getting stats of every player on the server\
                    \ to be used. Nothing malicious, just letting you know! c:"
  /player/{player_name}/advancements:
    get:
      description: ""
      parameters:
      - name: "player_name"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "object"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Map_String"
  /player/{player_name}/stats:
    get:
      description: ""
      parameters:
      - name: "player_name"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/PlayerStatistic"
              examples:
                Example#1:
                  description: ""
                  value: []
  /player/{player_name}/status:
    get:
      description: ""
      parameters:
      - name: "player_name"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "object"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PlayerStatus"
              examples:
                Example#1:
                  description: ""
                  value:
                    health: "null"
                    absorption: "null"
                    armor:
                      value: "null"
                      percentage: "null"
                      max: 20.0
                      absorption: "null"
                    food: "null"
                    air: "null"
  /players:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Players"
  /server:
    get:
      description: ""
components:
  schemas:
    Map:
      type: "object"
      properties: {}
    Map_String:
      type: "string"
    PlayerStatistic:
      type: "object"
      properties: {}
    PlayerHealth:
      type: "object"
      properties:
        current:
          type: "number"
          format: "float"
        max:
          type: "number"
          format: "float"
    PlayerAbsorption:
      type: "object"
      properties:
        current:
          type: "number"
          format: "float"
        max:
          type: "number"
          format: "float"
    PlayerArmor:
      type: "object"
      properties:
        value:
          type: "integer"
          format: "int32"
        percentage:
          type: "number"
          format: "float"
        max:
          type: "number"
          format: "float"
        absorption:
          type: "number"
          format: "float"
    PlayerFood:
      type: "object"
      properties:
        exhaustion:
          type: "number"
          format: "float"
        saturation:
          type: "number"
          format: "float"
        level:
          type: "integer"
          format: "int32"
    PlayerAir:
      type: "object"
      properties:
        current:
          type: "integer"
          format: "int32"
        max:
          type: "integer"
          format: "int32"
    PlayerStatus:
      type: "object"
      properties:
        health:
          $ref: "#/components/schemas/PlayerHealth"
        absorption:
          $ref: "#/components/schemas/PlayerAbsorption"
        armor:
          $ref: "#/components/schemas/PlayerArmor"
        food:
          $ref: "#/components/schemas/PlayerFood"
        air:
          $ref: "#/components/schemas/PlayerAir"
      required:
      - "health"
      - "absorption"
      - "armor"
      - "food"
      - "air"
    PlayerInfo:
      type: "object"
      properties:
        uuid:
          type: "string"
          format: "uuid"
        name:
          type: "string"
      required:
      - "uuid"
      - "name"
    Players:
      type: "object"
      properties:
        count:
          type: "integer"
          format: "int32"
        players:
          type: "array"
          items:
            $ref: "#/components/schemas/PlayerInfo"
      required:
      - "players"